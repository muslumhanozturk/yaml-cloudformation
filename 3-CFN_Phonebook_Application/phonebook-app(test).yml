AWSTemplateFormatVersion: 2010-09-09
Description: |
  CloudFormation Template for Phonebook Application. This template creates Application Load Balancer
  with Auto Scaling Group of Amazon Linux 2 (ami-090e0fc566929d98b) EC2 Instances which host Python
  Flask Web Application. EC2 instances are placed within WebServerSecurityGroup which allows http
  (80) connections only from ALBSecurityGroup, and allows tcp(3306) connections only within itself.
  RDS DB instance is placed within WebServerSecurityGroup so that Database Server can communicate
  with Web Servers. Application Load Balancer is placed within ALBSecurityGroup which allows http
  (80) connections from anywhere. WebServerASG Auto Scaling Group is using the LT Launch Template
  in order to spin up instances needed. LT Launch Template is configured to prepare Python Flask environment
  on EC2, and to deploy Phonebook Application on Flask Server after downloading the app code from Github repository.

Parameters:
  Subnets:
    Description: Please select your subnets used by ALB
    Type: List<AWS::EC2::Subnet::Id>
  MyVPC:
    Description: Please select your VPC 
    Type: AWS::EC2::VPC::Id
  MyKeyName:
    Description: Please select your keyname
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  ALBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ALB Security Group # Required
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref MyVPC

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: WebServerSecurityGroup # Required
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80  
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22 
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref MyVPC 
  LT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: MyTemplate
      LaunchTemplateData:
        ImageId: ami-090e0fc566929d98b
        InstanceType: t2.micro
        KeyName: !Ref MyKeyName
        SecurityGroupIds:
          - !GetAtt WebServerSecurityGroup.GroupId
        TagSpecifications:
          - ResourceType: instance
            Tags: 
              - Key: Name
                Value: !Sub Web Server of ${AWS::StackName} Stack
        UserData:   
          Fn::Base64:  # metni Base64 kodlamasına dönüştürmek için kullanılır.
            !Sub       # !Sub işlevi, metindeki ${MyDBURI} ifadesini !GetAtt DBInstance.Endpoint.Address değeriyle değiştirir.
              - |      # pipe işareti, birden çok satırda yer alan bash komutlarını aynı ifade içinde birleştirmek için kullanılır.
                #! /bin/bash
                yum update -y
                yum install python3 -y
                pip3 install flask
                pip3 install flask_mysql
                echo "${MyDBURI}" > /home/ec2-user/dbserver.endpoint
                TOKEN="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"
                FOLDER="https://$TOKEN@raw.githubusercontent.com/muslumhanozturk/private-my-project/main/Project-004-Phonebook-Application/"
                curl -s --create-dirs -o "/home/ec2-user/templates/index.html" -L "$FOLDER"/templates/index.html
                curl -s --create-dirs -o "/home/ec2-user/templates/add-update.html" -L "$FOLDER"/templates/add-update.html
                curl -s --create-dirs -o "/home/ec2-user/templates/delete.html" -L "$FOLDER"/templates/delete.html
                curl -s --create-dirs -o "/home/ec2-user/app.py" -L "$FOLDER"/phonebook-app.py
                python3 /home/ec2-user/app.py
              - MyDBURI: !GetAtt DBInstance.Endpoint.Address

  TG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      ProtocolVersion: HTTP1
      TargetType: instance
      UnhealthyThresholdCount: 3
      VpcId: !Ref MyVPC

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt ALBSecGroup.GroupId
      Subnets: !Ref Subnets     # Ya Subnets yazılır ya da SubnetMapping yazılır.Parameters da subnetleri zaten liste içinde yazdığımız için burda tekrar listeye gerek yok.
      Type: application

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required  
        - TargetGroupArn: !Ref TG  # !GetAtt TG.TargetGroupArn
          Type: forward
      LoadBalancerArn: !Ref ALB # (Required)  
      Port: 80
      Protocol: HTTP

  ASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: 
        !GetAZs ""  # geçerli bölgenin tüm AZ'lerini döndürür.
      DesiredCapacity: 2
      HealthCheckGracePeriod: 300
      HealthCheckType: ELB  #sağlık kontrolü ELB tarafından kontrol edilir.
      LaunchTemplate:   
        LaunchTemplateId: !Ref LT
        Version: !GetAtt LT.LatestVersionNumber
      MaxSize: 3 # Required
      MinSize: 1 # Required
      TargetGroupARNs: 
        - !Ref TG  # !GetAtt TG.TargetGroupArn

  DBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress: # Required
        -  EC2SecurityGroupId: !GetAtt WebServerSecurityGroup.GroupId
      GroupDescription: Back-end Database # Required

  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: false
      BackupRetentionPeriod: 0         #back-up alınmasını istemiyorsak 0 yazılır.
      DBInstanceClass: db.t2.micro
      DBInstanceIdentifier: phonebook-app
      DBName: clarusway_phonebook
      DBSecurityGroups:
        - !Ref DBSecurityGroup
      Engine: MySQL
      EngineVersion: 8.0.32
      MasterUsername: admin
      MasterUserPassword: clarusway_1234
      Port: 3306
      PubliclyAccessible: true

Outputs:
  WebsiteURL:
    Value: !Sub
      - http://${ALBAddress}
      - ALBAddress: !GetAtt ALB.DNSName
    Description: Phonebook Application Load Balancer URL